<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type='text/xsl' href='puzzles.xsl'?><puzzles>
<puzzle>
<ticket>1</ticket>
<file>pom.xml</file>
<prefix>                </prefix>
<body>Enable Cobertura profile by default. This code coverage check doesn't work due to some problem with Cobertura plugin. It always reports zero coverage for all classes. I was trying to run it without AspectJ weavling using "mvn clean install -Pcobertura -P\!aspectj", but it doesn't help. Let's fix it and enable by default.</body>
<estimate>0</estimate>
<lines>264-269</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>121</ticket>
<file>src/main/java/com/jcabi/github/Fork.java</file>
<prefix> * </prefix>
<body>Add more Fork attributes to Smart decorator for this class. Don't forget to add them to unit test.</body>
<estimate>0</estimate>
<lines>48-48</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>440</ticket>
<file>src/main/java/com/jcabi/github/Git.java</file>
<prefix>     * </prefix>
<body>Implement the Git Data Trees Mock classes: 1) A class MkTrees, which mocks the Trees interface. 2) MkTree, which mocks a single Tree object. Don't forget to implement unit tests</body>
<estimate>0</estimate>
<lines>100-100</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>441</ticket>
<file>src/main/java/com/jcabi/github/Git.java</file>
<prefix>     * </prefix>
<body>Implement the Git Data Tree integration tests.</body>
<estimate>0</estimate>
<lines>104-104</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>812</ticket>
<file>src/main/java/com/jcabi/github/Release.java</file>
<prefix>         * </prefix>
<body>We should generalize this method in SmartJson type. Let's implement it in a method named SmartJson.notNull(String) or something similar, which returns true if a certain key is present AND does not have a JsonValue of ValueType.NULL. Then let's use it here instead of manually checking it with the release's json value.</body>
<estimate>0</estimate>
<lines>237-241</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>217</ticket>
<file>src/main/java/com/jcabi/github/mock/MkSearch.java</file>
<prefix> * </prefix>
<body>MkSearch.codes() is not implemented. Let's implement it and remove this puzzle @see &lt;a href="https://developer.github.com/v3/search/#search-code"&gt;Search API&lt;/a&gt; for details</body>
<estimate>0</estimate>
<lines>54-57</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>551</ticket>
<file>src/test/java/com/jcabi/github/RtGistITCase.java</file>
<prefix>     * </prefix>
<body>ReadsAndWritesGists is disabled since it doesn't work with real Github account. Let's fix it and remove the Ignore annotation.</body>
<estimate>0</estimate>
<lines>48-50</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>551</ticket>
<file>src/test/java/com/jcabi/github/RtGistsITCase.java</file>
<prefix>     * </prefix>
<body>CreateGist is disabled since it doesn't work with real Github account. Let's fix it and remove the Ignore annotation.</body>
<estimate>0</estimate>
<lines>48-50</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>802</ticket>
<file>src/test/java/com/jcabi/github/RtIssueITCase.java</file>
<prefix>     * </prefix>
<body>RtIssueITCase.identifyAssignee() fails during Rultor build. We made research and had discussion in #802. Our current supposition is that we have such error because user that Rultor use for tests is very active, so Github think that he is "non-human" user nad don't allow to assign it to issue. The problem needs further research. I think, we can start from contact Github support. It looks like undocumented feature and we have to know what to expect from Github side, maybe they offer us something useful. More details about initial research you can find in issue #802. Let's make research, fix this bug and finally remove this puzzle.</body>
<estimate>0</estimate>
<lines>122-131</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>217</ticket>
<file>src/test/java/com/jcabi/github/RtSearchITCase.java</file>
<prefix>     * </prefix>
<body>RtSearchITCase.canSearchForContents() is missing. Let's implement it and remove this puzzle @see &lt;a href="https://developer.github.com/v3/search/#search-code"&gt;Search API&lt;/a&gt; for details</body>
<estimate>0</estimate>
<lines>114-117</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>590</ticket>
<file>src/test/java/com/jcabi/github/mock/MkContentsTest.java</file>
<prefix> * </prefix>
<body>MkContents can now create and get files from non-default branches. However, the same functionality has not been implemented yet for the update() method. Let's fix it. See http://developer.github.com/v3/repos/contents for details</body>
<estimate>0</estimate>
<lines>51-54</lines>
<owner>someone</owner>
</puzzle>
</puzzles>
