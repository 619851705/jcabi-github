<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<?xml-stylesheet type='text/xsl' href='puzzles.xsl'?><puzzles>
<puzzle>
<ticket>1</ticket>
<file>pom.xml</file>
<prefix>                </prefix>
<body>Enable Cobertura profile by default. This code coverage check doesn't work due to some problem with Cobertura plugin. It always reports zero coverage for all classes. I was trying to run it without AspectJ weavling using "mvn clean install -Pcobertura -P\!aspectj", but it doesn't help. Let's fix it and enable by default.</body>
<estimate>0</estimate>
<lines>264-269</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>121</ticket>
<file>src/main/java/com/jcabi/github/Fork.java</file>
<prefix> * </prefix>
<body>Add more Fork attributes to Smart decorator for this class. Don't forget to add them to unit test.</body>
<estimate>0</estimate>
<lines>48-48</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>115</ticket>
<file>src/main/java/com/jcabi/github/Git.java</file>
<prefix>     * </prefix>
<body>Implement the Git Data Trees API. We need to implement the following: 1) Add the operations in http://developer.github.com/v3/git/trees/ to the Trees interface. 2) A class RtTrees, which performs RESTful request operations against the Trees API. 3) A class MkTrees, which mocks the Trees interface. 4) An interface Tag, which represents a single Tag of the Git Data API. 5) RtTrees, a Tag implementation which fetches and modifies Tag information according to the Trees API, and 6) MkTag, which mocks a single Tag object. Don't forget to implement unit tests and integration tests.</body>
<estimate>60</estimate>
<lines>100-112</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>217</ticket>
<file>src/main/java/com/jcabi/github/mock/MkSearch.java</file>
<prefix> * </prefix>
<body>MkSearch.codes() is not implemented. Let's implement it and remove this puzzle @see &lt;a href="https://developer.github.com/v3/search/#search-code"&gt;Search API&lt;/a&gt; for details</body>
<estimate>0</estimate>
<lines>54-57</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>551</ticket>
<file>src/test/java/com/jcabi/github/RtGistITCase.java</file>
<prefix>     * </prefix>
<body>ReadsAndWritesGists is disabled since it doesn't work with real Github account. Let's fix it and remove the Ignore annotation.</body>
<estimate>0</estimate>
<lines>48-50</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>551</ticket>
<file>src/test/java/com/jcabi/github/RtGistsITCase.java</file>
<prefix>     * </prefix>
<body>CreateGist is disabled since it doesn't work with real Github account. Let's fix it and remove the Ignore annotation.</body>
<estimate>0</estimate>
<lines>48-50</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>217</ticket>
<file>src/test/java/com/jcabi/github/RtSearchITCase.java</file>
<prefix>     * </prefix>
<body>RtSearchITCase.canSearchForContents() is missing. Let's implement it and remove this puzzle @see &lt;a href="https://developer.github.com/v3/search/#search-code"&gt;Search API&lt;/a&gt; for details</body>
<estimate>0</estimate>
<lines>114-117</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>590</ticket>
<file>src/test/java/com/jcabi/github/mock/MkContentsTest.java</file>
<prefix> * </prefix>
<body>MkContents can now create and get files from non-default branches. However, the same functionality has not been implemented yet for the update() and remove() methods. Let's fix it. See http://developer.github.com/v3/repos/contents for details</body>
<estimate>0</estimate>
<lines>54-57</lines>
<owner>someone</owner>
</puzzle>
<puzzle>
<ticket>444</ticket>
<file>src/test/java/com/jcabi/github/mock/MkContentsTest.java</file>
<prefix>     * </prefix>
<body>Methods create() in MkContents and json() in MkContent should be implemented in order for this test to work.</body>
<estimate>0</estimate>
<lines>185-186</lines>
<owner>someone</owner>
</puzzle>
</puzzles>
