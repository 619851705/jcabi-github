# Object Oriented Github API

Set of classes in `com.jcabi.github` package
is an object oriented Java adapter of
[Github API](http://developer.github.com/v3/):

```java
public class Main {
  public static void main(String[] args) {
    Github github = new Github.Simple(".. your OAuth token ..");
    Repo repo = github.repo("jcabi/jcabi-github");
    Issue issue = repo.issues().create("How are you?", "Please tell me...");
    issue.post("My first comment!");
  }
}
```

Read [JavaDoc](./apidocs-${project.version}/com/jcabi/github/index.html)
for more information and examples.

There are [a few other Java adapters](http://developer.github.com/libraries/)
of Github API, but our
implementation has its advantages, including:

 * All classes are private and implement public interfaces

 * Out-of-the-box in-memory mock of Github server side

 * All classes are truly immutable and thread-safe

 * Every Github object gives GET/PATCH access to its raw JSON

 * HTTP request is accessible for modifications

The only dependency you need is
(you can also download
[`jcabi-github-${project.version}.jar`](http://repo1.maven.org/maven2/com/jcabi/jcabi-github/${project.version}/jcabi-github-${project.version}.jar)
and add it to the classpath):

```
<dependency>
  <groupId>com.jcabi</groupId>
  <artifactId>jcabi-github</artifactId>
  <version>${project.version}</version>
</dependency>
```

## Cutting Edge Version

If you want to use current version of the product, you can do it with
this configuration in your `pom.xml`:

```
<repositories>
  <repository>
    <id>oss.sonatype.org</id>
    <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
  </repository>
</repositories>
<dependencies>
  <dependency>
    <groupId>com.jcabi</groupId>
    <artifactId>jcabi-github</artifactId>
    <version>1.0-SNAPSHOT</version>
  </dependency>
</dependencies>
```
